{"version":3,"sources":["App.js","clock/Clock.jsx","index.js"],"names":["interval","Clock","currentTime","name","App","state","isClockVisible","time","Date","toLocaleTimeString","clockName","_","prevState","clearInterval","this","console","log","setInterval","date","setState","className","type","onClick","Math","random","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2IAIIA,E,4DCDSC,G,MAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,KAAhB,OACnB,oCACE,oDAAsBD,IACtB,qDAAuBC,EAAvB,SDgEWC,E,4MA/DbC,MAAQ,CACNC,gBAAgB,EAChBC,MAAM,IAAIC,MAAOC,qBACjBC,UAAW,G,wDAGb,SAAmBC,EAAGC,GAAY,IAAD,OAC/BC,cAAcb,GACd,MAAsCc,KAAKT,MAAnCC,EAAR,EAAQA,eAAgBI,EAAxB,EAAwBA,UAEpBA,IAAcE,EAAUF,WAE1BK,QAAQC,IAAR,qCAA0CJ,EAAUF,UAApD,eAAoEA,IAGlEJ,IACFN,EAAWiB,aAAY,WACrB,IAAMC,GAAO,IAAIV,MAAOC,qBAGxBM,QAAQC,IAAIE,GACZ,EAAKC,SAAS,CAAEZ,KAAMW,MACrB,Q,oBAIP,WAAU,IAAD,OACP,EAA4CJ,KAAKT,MAAzCC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,KAAMG,EAA9B,EAA8BA,UAE9B,OACE,yBAAKU,UAAU,OACb,2CACA,4BACEC,KAAK,SACLC,QAAS,kBAAM,EAAKH,SAAS,CAAET,UAAWa,KAAKC,aAFjD,mBAMA,4BACEH,KAAK,SACLC,QAAS,kBAAM,EAAKH,SAAS,CAAEb,gBAAgB,MAFjD,cAMA,4BACEe,KAAK,SACLC,QAAS,kBAAM,EAAKH,SAAS,CAAEb,gBAAgB,MAFjD,cAOCA,GAEC,kBAAC,EAAD,CACEJ,YAAaK,EACbJ,KAAMO,S,GAxDAe,IAAMC,WEFxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.0b7e94f9.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport { Clock } from './clock';\n\nlet interval;\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: false,\n    time: new Date().toLocaleTimeString(),\n    clockName: 0,\n  }\n\n  componentDidUpdate(_, prevState) {\n    clearInterval(interval);\n    const { isClockVisible, clockName } = this.state;\n\n    if (clockName !== prevState.clockName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevState.clockName} to ${clockName}`)\n    }\n\n    if (isClockVisible) {\n      interval = setInterval(() => {\n        const date = new Date().toLocaleTimeString();\n\n        // eslint-disable-next-line\n        console.log(date);\n        this.setState({ time: date });\n      }, 1000);\n    }\n  }\n\n  render() {\n    const { isClockVisible, time, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ clockName: Math.random() })}\n        >\n          Set random name\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ isClockVisible: true })}\n        >\n          Show clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ isClockVisible: false })}\n        >\n          Hide clock\n        </button>\n\n        {isClockVisible\n          && (\n          <Clock\n            currentTime={time}\n            name={clockName}\n          />\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Clock = ({ currentTime, name }) => (\n  <>\n    <h4>{`Current time: ${currentTime}`}</h4>\n    <h4>{`Current name : ${name} `}</h4>\n  </>\n);\n\nClock.propTypes = {\n  currentTime: PropTypes.string.isRequired,\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}